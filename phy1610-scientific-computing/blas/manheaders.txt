

       CGBMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y, or   y := alpha*conjg( A' )*x + beta*y,
       CGEMM - perform one of the matrix-matrix operations   C := alpha*op( A )*op( B ) + beta*C,
       CGEMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y, or   y := alpha*conjg( A' )*x + beta*y,
       CGERC - perform the rank 1 operation   A := alpha*x*conjg( y' ) + A,
       CGERU - perform the rank 1 operation   A := alpha*x*y' + A,
       CHBMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       CHEMM - perform one of the matrix-matrix operations   C := alpha*A*B + beta*C,
       CHEMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       CHER - perform the hermitian rank 1 operation   A := alpha*x*conjg( x' ) + A,
       CHER2 - perform the hermitian rank 2 operation   A := alpha*x*conjg( y' ) + conjg( alpha )*y*conjg( x' ) + A,
       CHER2K - perform one of the hermitian rank 2k operations   C := alpha*A*conjg( B' ) + conjg( alpha )*B*conjg( A' ) + beta*C,
       CHERK - perform one of the hermitian rank k operations   C := alpha*A*conjg( A' ) + beta*C,
       CHPMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       CHPR - perform the hermitian rank 1 operation   A := alpha*x*conjg( x' ) + A,
       CHPR2 - perform the hermitian rank 2 operation   A := alpha*x*conjg( y' ) + conjg( alpha )*y*conjg( x' ) + A,
       CSCAL - scales a vector by a constant.
       CSYMM - perform one of the matrix-matrix operations   C := alpha*A*B + beta*C,
       CSYR2K - perform one of the symmetric rank 2k operations   C := alpha*A*B' + alpha*B*A' + beta*C,
       CSYRK - perform one of the symmetric rank k operations   C := alpha*A*A' + beta*C,
       CTBMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x, or x := conjg( A' )*x,
       CTBSV - solve one of the systems of equations   A*x = b, or A'*x = b, or conjg( A' )*x = b,
       CTPMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x, or x := conjg( A' )*x,
       CTPSV - solve one of the systems of equations   A*x = b, or A'*x = b, or conjg( A' )*x = b,
       CTRMM  -  perform  one  of  the  matrix-matrix  operations   B := alpha*op( A )*B, or B := alpha*B*op( A )  where alpha is a scalar, B is an m by n
       CTRMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x, or x := conjg( A' )*x,
       CTRSM - solve one of the matrix equations   op( A )*X = alpha*B, or X*op( A ) = alpha*B,
       CTRSV - solve one of the systems of equations   A*x = b, or A'*x = b, or conjg( A' )*x = b,
       DGBMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y,
       DGEMM - perform one of the matrix-matrix operations   C := alpha*op( A )*op( B ) + beta*C,
       DGEMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y,
       DGER - perform the rank 1 operation   A := alpha*x*y' + A,
       DSBMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       DSPMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       DSPR - perform the symmetric rank 1 operation   A := alpha*x*x' + A,
       DSPR2 - perform the symmetric rank 2 operation   A := alpha*x*y' + alpha*y*x' + A,
       DSYMM - perform one of the matrix-matrix operations   C := alpha*A*B + beta*C,
       DSYMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       DSYR - perform the symmetric rank 1 operation   A := alpha*x*x' + A,
       DSYR2 - perform the symmetric rank 2 operation   A := alpha*x*y' + alpha*y*x' + A,
       DSYR2K - perform one of the symmetric rank 2k operations   C := alpha*A*B' + alpha*B*A' + beta*C,
       DSYRK - perform one of the symmetric rank k operations   C := alpha*A*A' + beta*C,
       DTBMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x,
       DTBSV - solve one of the systems of equations   A*x = b, or A'*x = b,
       DTPMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x,
       DTPSV - solve one of the systems of equations   A*x = b, or A'*x = b,
       DTRMM - perform one of the matrix-matrix operations   B := alpha*op( A )*B, or B := alpha*B*op( A ),
       DTRMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x,
       DTRSM - solve one of the matrix equations   op( A )*X = alpha*B, or X*op( A ) = alpha*B,
       DTRSV - solve one of the systems of equations   A*x = b, or A'*x = b,
       LSAME - return .TRUE
       SGBMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y,
       SGEMM - perform one of the matrix-matrix operations   C := alpha*op( A )*op( B ) + beta*C,
       SGEMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y,
       SGER - perform the rank 1 operation   A := alpha*x*y' + A,
       SSBMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       SSPMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       SSPR - perform the symmetric rank 1 operation   A := alpha*x*x' + A,
       SSPR2 - perform the symmetric rank 2 operation   A := alpha*x*y' + alpha*y*x' + A,
       SSYMM - perform one of the matrix-matrix operations   C := alpha*A*B + beta*C,
       SSYMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       SSYR - perform the symmetric rank 1 operation   A := alpha*x*x' + A,
       SSYR2 - perform the symmetric rank 2 operation   A := alpha*x*y' + alpha*y*x' + A,
       SSYR2K - perform one of the symmetric rank 2k operations   C := alpha*A*B' + alpha*B*A' + beta*C,
       SSYRK - perform one of the symmetric rank k operations   C := alpha*A*A' + beta*C,
       STBMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x,
       STBSV - solve one of the systems of equations   A*x = b, or A'*x = b,
       STPMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x,
       STPSV - solve one of the systems of equations   A*x = b, or A'*x = b,
       STRMM - perform one of the matrix-matrix operations   B := alpha*op( A )*B, or B := alpha*B*op( A ),
       STRMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x,
       STRSM - solve one of the matrix equations   op( A )*X = alpha*B, or X*op( A ) = alpha*B,
       STRSV - solve one of the systems of equations   A*x = b, or A'*x = b,
       XERBLA - i an error handler for the LAPACK routines
       ZGBMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y, or   y := alpha*conjg( A' )*x + beta*y,
       ZGEMM - perform one of the matrix-matrix operations   C := alpha*op( A )*op( B ) + beta*C,
       ZGEMV - perform one of the matrix-vector operations   y := alpha*A*x + beta*y, or y := alpha*A'*x + beta*y, or   y := alpha*conjg( A' )*x + beta*y,
       ZGERC - perform the rank 1 operation   A := alpha*x*conjg( y' ) + A,
       ZGERU - perform the rank 1 operation   A := alpha*x*y' + A,
       ZHBMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       ZHEMM - perform one of the matrix-matrix operations   C := alpha*A*B + beta*C,
       ZHEMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       ZHER - perform the hermitian rank 1 operation   A := alpha*x*conjg( x' ) + A,
       ZHER2 - perform the hermitian rank 2 operation   A := alpha*x*conjg( y' ) + conjg( alpha )*y*conjg( x' ) + A,
       ZHER2K - perform one of the hermitian rank 2k operations   C := alpha*A*conjg( B' ) + conjg( alpha )*B*conjg( A' ) + beta*C,
       ZHERK - perform one of the hermitian rank k operations   C := alpha*A*conjg( A' ) + beta*C,
       ZHPMV - perform the matrix-vector operation   y := alpha*A*x + beta*y,
       ZHPR - perform the hermitian rank 1 operation   A := alpha*x*conjg( x' ) + A,
       ZHPR2 - perform the hermitian rank 2 operation   A := alpha*x*conjg( y' ) + conjg( alpha )*y*conjg( x' ) + A,
       ZROTG - construct givens plane rotation
       ZSCAL - scales a vector by a constant.
       ZSYMM - perform one of the matrix-matrix operations   C := alpha*A*B + beta*C,
       ZSYR2K - perform one of the symmetric rank 2k operations   C := alpha*A*B' + alpha*B*A' + beta*C,
       ZSYRK - perform one of the symmetric rank k operations   C := alpha*A*A' + beta*C,
       ZTBMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x, or x := conjg( A' )*x,
       ZTBSV - solve one of the systems of equations   A*x = b, or A'*x = b, or conjg( A' )*x = b,
       ZTPMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x, or x := conjg( A' )*x,
       ZTPSV - solve one of the systems of equations   A*x = b, or A'*x = b, or conjg( A' )*x = b,
       ZTRMM  -  perform  one  of  the  matrix-matrix  operations   B := alpha*op( A )*B, or B := alpha*B*op( A )  where alpha is a scalar, B is an m by n
       ZTRMV - perform one of the matrix-vector operations   x := A*x, or x := A'*x, or x := conjg( A' )*x,
       ZTRSM - solve one of the matrix equations   op( A )*X = alpha*B, or X*op( A ) = alpha*B,
       ZTRSV - solve one of the systems of equations   A*x = b, or A'*x = b, or conjg( A' )*x = b,

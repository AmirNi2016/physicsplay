#! /usr/bin/perl

use strict ;
use warnings ;
use Getopt::Long;

my $filename = "WHAT" ;
my $equation ;
my $boxed ;
my $dmath ;
my $aligned ;
my $example ;
my $problem ;
my $oproblem ;
my $section ;
my $subequations ;
my $showUsage = 0 ;
my $number = 'n' ;
my $citep = 'desai2009quantum' ;
my $subproblem ;
my $subanswer ;
my $item ;
my $enum ;

GetOptions( 
   'file=s'        => \$filename,
   'example:s'     => \$example,
   'item'          => \$item,
   'enum'          => \$enum,
   'problem:s'     => \$problem,
   'oproblem:s'    => \$oproblem,
   'section:s'     => \$section,
   'citep:s'       => \$citep,
   'equation:i'    => \$equation,
   'subequations!' => \$subequations,
   'subproblem=s'  => \$subproblem,
   'subanswer=s'   => \$subanswer,
   'boxed'         => \$boxed,
   'dmath:i'       => \$dmath,
   'number:i'      => \$number,
   'aligned'       => \$aligned,
   'help!'         => \$showUsage,
) ;

if ( $showUsage )
{
   die 
"usage: generate Latex environment Templates, (for use within vim).

:,!~/bin/lt -f % [-example='blah blah'|-equation|-dmath|-aligned|-subequations]

Examples:

Just a dmath env:

:,!~/bin/lt -f % -d

A equation env with an aligned in it

:,!~/bin/lt -f % -eq -a

A makeexample block

:,!~/bin/lt -f % -ex='The linear case.'

The kitchen sink

:,!~/bin/lt -eq -f % -subeq -exa='blah blah' -dmath=3 -aligned
" ;
}

$filename =~ s/\.tex$// ;
$filename =~ s,.*/,, ;

my $printedEquation = 0 ;

if ( defined $example )
{
   print "\\makeexample{$example}{example:$filename:$number}{\n" ;
}

if ( defined $section )
{
   print "\\section{$section}\n" ;
}

if ( defined $problem )
{
   print "\\makeproblem{$problem}{problem:$filename:$number}{\n" ;
}

if ( defined $oproblem )
{
   print "\\makeoproblem{$oproblem}{problem:$filename:$number}{\\citep{$citep} pr X.$number}{\n" ;
}

if ( defined $subequations )
{
   print "\\begin{subequations}\n\\label{eqn:$filename:n}\n" ;
}

generateEquation( 'boxed', $boxed ) ;

generateEquation( 'dmath', $dmath ) ;

generateEquation( 'equation', $equation ) ;

if ( !$printedEquation && defined $aligned )
{
   generateAligned( ) ;
}

if ( defined $subequations )
{
   print "\\end{subequations}\n" ;
}

if ( defined $example )
{
   print "} % example\n\n" ;
}

if ( defined $subproblem )
{
   print "
\\makesubproblem{}{problem:$filename:$number:$subproblem}

" ;
}

if ( defined $problem || defined $oproblem )
{

   print "} % problem\n\n" .
         "\\makeanswer{problem:$filename:$number}{\n" ;
}

if ( defined $subanswer )
{
   print "
\\makeSubAnswer{}{problem:$filename:$number:$subanswer}

" ;
}

if ( defined $problem || defined $oproblem )
{
   print "} % answer\n" ;
}

if ( defined $item )
{
   print "
\\begin{itemize}
\\item
\\end{itemize}
" ;
}

if ( defined $enum )
{
   print "
\\begin{enumerate}
\\item
\\end{enumerate}
" ;
}

exit 0 ;

sub generateAligned
{
   if ( defined $aligned )
   {
      print "\\begin{aligned}\n" .
            "\\end{aligned}\n" ;
   }
}

sub generateEquation
{
   my ($envname, $var) = @_ ;
   my $begin ;
   my $end ;

   if ( $envname eq 'boxed' )
   {
      $begin = "\\boxedEquation{eqn:$filename:n}{\n" .
               "%\\begin{$envname}\\label{eqn:$filename:n}\n" ;
      $end = "%\\end{$envname}\n" .
             "}\n" ;
   }
   else
   {
      $begin = "\\begin{$envname}\\label{eqn:$filename:n}\n" ;
      $end = "\\end{$envname}\n" ;
   }

   if ( defined $var )
   {
      $printedEquation = 1 ;
      $var = 1 if ( $var == 0 ) ;

      for ( my $i = 0 ; $i < $var ; $i++ )
      {
         print $begin ;

         generateAligned() ;

         print $end ;
      }
   }
}

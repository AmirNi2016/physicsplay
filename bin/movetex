#!/usr/bin/perl

use strict ;
use warnings ;
use Getopt::Long;

my $d ;
#$d = 'gabook' ;
$d = 'nonga' ;
#$d = 'phy456' ;
#$d = 'phy450' ;
#$d = 'phy454' ;
#$d = 'otherbook' ;
my $filebase ;
my $printOnly = 0 ;
my $spellcheck = 1 ;

my $mathbase = 'math2011' ;

GetOptions(
   'file=s'   => \$filebase,
   'spellcheck!'   => \$spellcheck,
   'dir=s'    => \$d,
   'print!'   => \$printOnly,
) ;

die unless defined $filebase ;

my $suffix = 'ltx' ;

if ( ! -e "$filebase.$suffix" )
{
   $suffix = 'tex' ;
}

die "could not find file '$filebase.ltx or '$filebase.tex'\n"
   if ( ! -e "$filebase.$suffix" ) ;

my $curDirName = `pwd` ; chomp $curDirName ;
$curDirName =~ s,.*/,, ;

my @newDirCommands = () ;
my @newDeps = () ;
my @ig = split(/[\n\r\l]+/, `grep includegraphics $filebase.$suffix | sed 's/%.*//'`) ;
foreach (@ig)
{
   $_ =~ s/.*{// ;
   $_ =~ s/}// ;
   $_ .= '*' ;
   my @gg = glob( $_ ) ;

   foreach (@gg)
   {
      if ( !-e "$_" )
      {
         warn "in: $curDirName: cannot find file '$_' (skipping)\n" ;
         next ;
      }

      push( @newDirCommands, "git mv ../$curDirName/$_ $_" ) ;

      push( @newDeps, $_ ) ;
   }
}

my $title = `grep 'chapter{' $filebase.$suffix` ;
chomp $title ;
$title =~ s/.*{(.*?)}.*/$1/ ; 

my $date = `grep 'date{' $filebase.$suffix` ;
chomp $date ;
$date =~ s/.*{(.*?)}.*/$1/ ; 

my $meta = "
,{
   SOURCE => '$filebase',
   TITLE => qq($title),
   DATE => '$date',
   REF => '$filebase',
   URL => 'http://sites.google.com/site/peeterjoot2/$mathbase/$filebase.pdf',
   WHAT => qq()
}" ;

my @thisDirCommands = (
    "git commit $filebase.$suffix"
   ,"git mv $filebase.$suffix ../$d/$filebase.tex"
) ;

if ( $spellcheck )
{
   push( @newDirCommands, "aspell -c --mode=tex $filebase.tex" ) ;
}

foreach (@newDeps)
{
   push( @newDirCommands, "echo 'BOOKDEPENDENCIES +=' $_ >> make.dep" ) ;
}

push( @newDirCommands, "~/bin/filtertex $filebase.tex" ) ;
push( @newDirCommands, "echo '\%\\include{'$filebase'}' >> main.tex" ) ;
push( @newDirCommands, "echo 'BOOKDEPENDENCIES +=' $filebase.tex >> make.dep" ) ;

push( @newDirCommands, "
cat >> ../METADATA << EOF
$meta
EOF
" ) ;

foreach (@thisDirCommands)
{
   dosystem( $_ ) ;
}

chdir "../$d" or die ;

foreach (@newDirCommands)
{
   dosystem( $_ ) ;
}

exit 0 ;

sub dosystem
{
   if ( $printOnly )
   {
      print "$_\n" ;
   }
   else
   {
      system "$_" ;
   }
}

Assignment 2: Modularities, arrays and version control

You're given a c++ code ants.cc (click on the file to download) that simulates ants walking on a table. The direction in which they walk, depends on where they are on the table, and they can fall of the edge. The program prints the number of ants left on the table after every time step.

1) Put the code under version control, starting with the very original version you received (so that if you want to compare or either roll back to it, it will be possible).

2) Download (i.e. "clone") the rarray library from github and replace the automatic arrays with rarrays.

   https://github.com/vanzonr/rarray

3) Get rid of duplicated constants by storing them in variables.

4) Then modularize the code. There should be separate modules for initialization single time step output per time step a 'driver' main function that puts it altogether

5) Please recall that a proper "modularization" implies, separating your functions in several files (header with prototypes, preprocessor guards and necessary includes, and source files with the implementation of such functions).

6) A Makefile should be written to compile this modular code.

   We will check the number of commits, so be sure to commit your changes to git frequently, with meaningful commit messages.

7) Ensure your code is clearly commented.

Submit your code files (source and header files), your makefile, the output of "git log", and the output of the program by January 28, 2016. The late policy can be found in the syllabus.

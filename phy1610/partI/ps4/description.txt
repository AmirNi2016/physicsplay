Homework 4: Profiling and Optimization

Your class MyMatrix from the previous exercise, augmented by a double get_element(int i,int j) method, is to be used in this assignment to compute the matrix product of two matrices.

You get to start from an existing code: https://support.scinet.utoronto.ca/education/get.php/hw4profiling.zip

This code is modular, and consists or the following source files

mymultiply.h / mymultiply.cc : matrix multiplication routine using your MyMatrix class.
ticktock.h / ticktock.cc : implement a TickTock class used for timing in mm.cc
mm.cc : driver routine for the multiplication and the timing thereof.
mymatrix.h : The header file for your MyMatrix class.

The latter is to be supplemented by your own mymatrix.cc file (if you changed the interface in your last assignment you may need to modify the code of this assignment). The makefile 'Makefile', which is included in the zip file, can compile the code once your mymatrix.cc files is put in the same directory.

ASSIGNMENT:

For this homework, you will have to profile the original code and find the function and the line in the code where the application spends most of its time (the "bottleneck"). First put everything into git, then add profiling capabilities to the Makefile. Do this by adding flags to the compilation and linking commands and modifying the "profile.txt" rule in the makefile to include the output of gprof. Also add more tick/tock constructs to measure different parts of the code in mm.cc.

Next, you should try to improve the performance of the code by augmenting your MyMatrix class with a method to return the pointer-to-pointer: double** get_pointer(). You should then use this pointer in a rewritten version of the 'multiply' function. Re-profile and try to understand what changed.

See if there are further possibilities for optimization. If you implement any further optimizations, prove that they are beneficial by profiling the result.

As usual you have to use version control with git, and maintain the Makefile to compile, link and run this project. Please submit:

All source, header and make files for the rewritten program.
A text report with the results of the profiling.
The output of 'git log' for your code development. We expect to see several commits, and meaningful comments.
